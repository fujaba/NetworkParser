// clean --refresh-dependencies build
// -PReleaseBuild 
apply plugin: 'java'
apply plugin: 'maven'

ant.importBuild 'buildAnt.xml'
ant.importBuild 'gource.xml'
ant.importBuild 'Copyright.xml'
ant.importBuild 'ikvm.xml'
gource.group "Git"
makefilm.group "Git"
ikvm.group "Git"
AddCopyRightToSource.group "Build"

apply from: 'gradle/version.gradle'
apply from: 'gradle/tasks.gradle'
apply plugin: 'jacoco'
apply plugin: 'eclipse'
apply plugin: 'idea'

apply from: 'gradle/mavencentral.gradle'
apply from: 'gradle/artifactory.gradle'

idea {
	project {
		jdkName = '1.7'
		languageLevel = '1.7'
	}
}

repositories {
	jcenter()
	mavenCentral()
}
test {
	// enable TestNG support (default is JUnit)
	useJUnit {
		dependencies {
			compile(group: 'junit', name: 'junit', version: '[4,)')
		}
	}
}
buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '2.2.4')
	}
}

artifacts { 
	archives buildCoreJar
	archives buildCoreJar16
	archives buildCoreJar17
	archives buildSourceJar
	archives buildJavadoc
	archives buildFullJar
}

test {
	testLogging {
		events "failed"
		exceptionFormat "short"
		showStackTraces	true
		showStandardStreams true
		showCauses true
	}
}
jacoco {
	toolVersion = "0.7.5.201505241946"
}
jacocoTestReport {
	group = "Reporting"
	description = "Generate Jacoco coverage reports after running tests."
	executionData = files("$buildDir/jacoco/test.exec")
	reports {
		xml {
			enabled true
			//Following value is a file
			destination "${buildDir}/reports/jacoco/jacoco.xml"
		}
		csv.enabled false
		html {
			enabled true
			//Following value is a folder
			destination "${buildDir}/reports/jacoco"
		}
	}
}

sourceSets.main.output.classesDir 'build/classes/main'

sourceCompatibility = 1.8
targetCompatibility = 1.8

defaultTasks 'clean', 'test', 'buildAll'
